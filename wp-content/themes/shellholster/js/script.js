jQuery( function($)
{
  $(document).ready((function () {
    if ($(".menu").on("click", (function () {
      $(this).toggleClass("opened"), $(".header").toggleClass("opened")
    })), $(".menu-item-has-children").on("click", (function () {
      $(this).find("ul").toggleClass("active")
    })), $(".search-block .fa-search").on("click", (function () {
      $(this).parent().toggleClass("opened")
    })), $(".search-block .fa-times").on("click", (function () {
      $(this).parent().removeClass("opened")
    })), $(".faq-block li").on("click", (function () {
      $(this).toggleClass("opened")
    })), $(window).scroll((function () {
      var e = $(this), i = $(".header");
      e.scrollTop() > 120 ? i.addClass("fixed_header") : i.removeClass("fixed_header")
    })), $("#map").length > 0) {
      e = {
        lat: +$("#map").attr("data-lat"),
        lng: +$("#map").attr("data-lng")
      }, i = new google.maps.Map(document.getElementById("map"), {
        zoom: 14,
        center: e,
        scrollwheel: !1,
        navigationControl: !1,
        mapTypeControl: !1
      }), new google.maps.Marker({
        position: e,
        map: i,
        title: "ShellHolster"
      }).setAnimation(google.maps.Animation.BOUNCE)
    }
    var e, i;
    $(".swiper-js").length > 0 && $.getScript("https://cdnjs.cloudflare.com/ajax/libs/Swiper/7.3.0/swiper-bundle.js", (function () {
      $(".swiper-js").each((function () {
        var e = $(this), i = e.find(".swiper-container");
        e.hasClass("banner-slider") && (swipes = new Swiper(i[0], {
          speed: 1500,
          slidesPerView: 1,
          spaceBetween: 20,
          loop: !0,
          effect: "fade",
          fadeEffect: {crossFade: !0},
          autoplay: {delay: 5e3},
          navigation: {nextEl: $(this).find(".swiper-button-next")[0], prevEl: $(this).find(".swiper-button-prev")[0]},
          pagination: {el: $(this).find(".swiper-pagination")[0]}
        })), e.hasClass("brands-slider") && (swipes = new Swiper(i[0], {
          speed: 1500,
          slidesPerView: 5,
          spaceBetween: 20,
          loop: !0,
          autoplay: {delay: 3e3}
        })), e.hasClass("reviews-slider") && (swipes = new Swiper(i[0], {
          speed: 1500,
          slidesPerView: 3,
          spaceBetween: 40,
          loop: !0,
          navigation: {nextEl: $(this).find(".swiper-button-next")[0], prevEl: $(this).find(".swiper-button-prev")[0]},
          pagination: {el: $(this).find(".swiper-pagination")[0]},
          breakpoints: {0: {slidesPerView: 1}, 650: {slidesPerView: 2}, 1024: {slidesPerView: 3}}
        }))
      }))
    })), $("select").length > 0 && $.getScript("https://cdnjs.cloudflare.com/ajax/libs/jquery-nice-select/1.1.0/js/jquery.nice-select.min.js", (function () {
      $("select").niceSelect()
    })), $("[data-fancybox]").length > 0 && $.getScript("https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.5.7/jquery.fancybox.min.js", (function () {
      $("[data-fancybox]").fancybox({})
    }))
  }));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
});